#!/usr/bin/python3

import argparse
from colorama import Fore, Style
import os
import random
import subprocess
import time

print(Fore.GREEN + Style.BRIGHT + '''
                     _ ___ ____        _  _   
 _ __ __ _ _ __   __| |_ _|  _ \__   _| || |  
| '__/ _` | '_ \ / _` || || |_) \ \ / / || |_ 
| | | (_| | | | | (_| || ||  __/ \ V /|__   _|
|_|  \__,_|_| |_|\__,_|___|_|     \_/    |_|  
''' + Style.RESET_ALL)
print(Fore.CYAN + Style.BRIGHT + "from mc3X" + Style.RESET_ALL)

z = 0
parser = argparse.ArgumentParser(description="This script is for the local and Public IP", epilog="All settings will be reset at the end of this program")
parser.add_argument("-c", "--connect", type=str, default=None, help="Select public or local")
parser.add_argument("-m", "--mode", type=str, default=None, help="Select auto or manuel")
parser.add_argument("-n", "--nic", type=str, default=None, help="Select NIC (wlan0, eth0, etc.)")
parser.add_argument("-t", "--time", type=int, default=None, help="Enter time for script (mode=manual)")
args = parser.parse_args()

def check_your_subnet():
    os.system("ip -o -4 addr show dev " + args.nic + " | awk '{print $4}' | cut -d/ -f2 > .sn.txt")

def change_mac(interface):
    subprocess.run(['sudo', 'ifconfig', interface, 'down'], check=True)
    subprocess.run(['sudo', 'macchanger', '-r', interface], check=True)
    subprocess.run(['sudo', 'ifconfig', interface, 'up'], check=True)

def check_and_change(interface):
    ip = ".".join(map(str, (random.randint(0, 255) for _ in range(4))))
    response = os.system("ping -c 1 " + ip)
    #IP is up and can't by used for you
    if response == 0:
        while True:
            #New IP scan
            if response != 0:
                #When IP is free
                break
    #IP is down and can by used
    elif response != 0:
        subprocess.run(['sudo', 'ifconfig', interface, 'down'], check=True)
        subprocess.run(['sudo', 'ifconfig', interface, ip], check=True)
        subprocess.run(['sudo', 'ifconfig', interface, 'up'], check=True)
        print(Fore.GREEN + f"IP-Address of NIC {interface} successful changed to {ip}" + Style.RESET_ALL, end="\n")

if os.getuid() != 0:
    exit(Fore.RED + Style.BRIGHT + "You need root!" + Style.RESET_ALL)

try:
    if args.connect == 'public':
        if args.mode == 'auto':
            print(Fore.GREEN + Style.BRIGHT + "##Automatic Mode Selected##" + Style.RESET_ALL)
            os.system("sudo service tor stop")
            os.system("sudo service tor start")
            print("")
            print(Fore.BLUE + Style.BRIGHT + "Started at: ", time.ctime())
            while True:
                z += 1
                os.system("sudo service tor reload")
                print(Fore.GREEN + Style.BRIGHT + f"##RESET {z} COMPLETE##", Fore.RED + "  Time of Last change: ", time.ctime(), "|  Time to restart: ", args.time, end="\r" + Style.RESET_ALL)
                time.sleep(30)
        elif args.mode == 'manuel':
            print(Fore.GREEN + Style.BRIGHT + "##Manual Mode Selected##" + Style.RESET_ALL)
            os.system("sudo service tor stop")
            os.system("sudo service tor start")
            print("")
            print(Fore.BLUE + Style.BRIGHT + "Started at: ", time.ctime())
            while True:
                z += 1
                os.system("sudo service tor restart")
                print(Fore.GREEN + Style.BRIGHT + f"##RESET {z} COMPLETE##", Fore.RED + "  Time of Last change: ", time.ctime(), "|  Time to restart: ", args.time, end="\r" + Style.RESET_ALL)
                time.sleep(args.time)
    elif args.connect == 'local':
        if args.mode == 'auto':
            print(Fore.GREEN + Style.BRIGHT + "##Automatic Mode Started##" + Style.RESET_ALL)
            print("")
            while True:
                z += 1
                change_mac(args.nic)
                print(Fore.GREEN + Style.BRIGHT + f"##RESET {z} COMPLETE##", end="\r" + Style.RESET_ALL)
                check_and_change(args.nic)
                time.sleep(120)
        elif args.mode == 'manuel':
            print(Fore.GREEN + Style.BRIGHT + "##Manual Mode Started##" + Style.RESET_ALL)
            print("")
            while True:
                change_mac(args.nic)            
                print(Fore.GREEN + Style.BRIGHT + f"##RESET {z} COMPLETE##", end="\r" + Style.RESET_ALL)
                check_and_change(args.nic)
                time.sleep(args.time)
                z += 1    
except KeyboardInterrupt:
    if args.connect == 'public':
        os.system("sudo service tor stop")
        print("")
        exit(Fore.RED + Style.BRIGHT + "You stopped the script!" + Style.RESET_ALL)
    elif args.connect == 'local':
        subprocess.run(["sudo macchanger -p", args.nic], check=True)
        print("")
        exit(Fore.RED + Style.BRIGHT, "You stopped the script!" + Style.RESET_ALL)
    elif args.connect == 'local' and args.connect == 'public':
        os.system("sudo service tor stop")
        subprocess.run(["sudo macchanger -p", args.nic], check=True)
        print("")
        exit(Fore.RED + Style.BRIGHT, "You stopped the script!" + Style.RESET_ALL)
